function post(e,t,r){r=r||"post";var n=document.createElement("form");n.setAttribute("method",r),n.setAttribute("action",e);for(var i in t)if(t.hasOwnProperty(i)){var a=document.createElement("input");a.setAttribute("type","hidden"),a.setAttribute("name",i),a.setAttribute("value",t[i]),n.appendChild(a)}document.body.appendChild(n),n.submit()}function errorHandler(e){console.log(e);var t=e.responseJSON;console.log(t),t&&0==t.status&&t.message&&showError(t.message)}function showError(e){$("#error-alert").alert(),$("#error-alert-message").html(e)}function formatDate(e){var t=new Date(e);return t.getUTCDate()+"/"+(t.getUTCMonth()+1)+"/"+t.getUTCFullYear()}$(function(){$("#side-menu").metisMenu()}),$(function(){$(window).bind("load resize",function(){var e=50,t=this.window.innerWidth>0?this.window.innerWidth:this.screen.width;t<768?($("div.navbar-collapse").addClass("collapse"),e=100):$("div.navbar-collapse").removeClass("collapse");var r=(this.window.innerHeight>0?this.window.innerHeight:this.screen.height)-1;r-=e,r<1&&(r=1),r>e&&$("#page-wrapper").css("min-height",r+"px")});var e=window.location.href.split("#")[0],t=$("ul.nav a").filter(function(){return this.href==e}).addClass("active").parent();for($(".navbar-default.sidebar").removeAttr("hidden");;){if(!t.is("li"))break;t=t.parent().addClass("in").parent()}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNiLWFkbWluLTIuanMiXSwibmFtZXMiOlsicG9zdCIsInBhdGgiLCJwYXJhbXMiLCJtZXRob2QiLCJmb3JtIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlIiwia2V5IiwiaGFzT3duUHJvcGVydHkiLCJoaWRkZW5GaWVsZCIsImFwcGVuZENoaWxkIiwiYm9keSIsInN1Ym1pdCIsImVycm9ySGFuZGxlciIsInhociIsImNvbnNvbGUiLCJsb2ciLCJqc29uUmVzcG9uc2UiLCJyZXNwb25zZUpTT04iLCJzdGF0dXMiLCJtZXNzYWdlIiwic2hvd0Vycm9yIiwiJCIsImFsZXJ0IiwiaHRtbCIsImZvcm1hdERhdGUiLCJkYXRlU3RyaW5nIiwiZGF0ZSIsIkRhdGUiLCJnZXRVVENEYXRlIiwiZ2V0VVRDTW9udGgiLCJnZXRVVENGdWxsWWVhciIsIm1ldGlzTWVudSIsIndpbmRvdyIsImJpbmQiLCJ0b3BPZmZzZXQiLCJ3aWR0aCIsInRoaXMiLCJpbm5lcldpZHRoIiwic2NyZWVuIiwiYWRkQ2xhc3MiLCJyZW1vdmVDbGFzcyIsImhlaWdodCIsImlubmVySGVpZ2h0IiwiY3NzIiwidXJsIiwibG9jYXRpb24iLCJocmVmIiwic3BsaXQiLCJlbGVtZW50IiwiZmlsdGVyIiwicGFyZW50IiwicmVtb3ZlQXR0ciIsImlzIl0sIm1hcHBpbmdzIjoiQUE4Q0EsUUFBU0EsTUFBS0MsRUFBTUMsRUFBUUMsR0FDeEJBLEVBQVNBLEdBQVUsTUFJbkIsSUFBSUMsR0FBT0MsU0FBU0MsY0FBYyxPQUNsQ0YsR0FBS0csYUFBYSxTQUFVSixHQUM1QkMsRUFBS0csYUFBYSxTQUFVTixFQUU1QixLQUFLLEdBQUlPLEtBQU9OLEdBQ1osR0FBSUEsRUFBT08sZUFBZUQsR0FBTSxDQUM1QixHQUFJRSxHQUFjTCxTQUFTQyxjQUFjLFFBQ3pDSSxHQUFZSCxhQUFhLE9BQVEsVUFDakNHLEVBQVlILGFBQWEsT0FBUUMsR0FDakNFLEVBQVlILGFBQWEsUUFBU0wsRUFBT00sSUFFekNKLEVBQUtPLFlBQVlELEdBSXpCTCxTQUFTTyxLQUFLRCxZQUFZUCxHQUMxQkEsRUFBS1MsU0FHVCxRQUFTQyxjQUFhQyxHQUNsQkMsUUFBUUMsSUFBSUYsRUFFWixJQUFJRyxHQUFlSCxFQUFJSSxZQUV2QkgsU0FBUUMsSUFBSUMsR0FFUkEsR0FBdUMsR0FBdkJBLEVBQWFFLFFBQW1CRixFQUFhRyxTQUM3REMsVUFBVUosRUFBYUcsU0FJL0IsUUFBU0MsV0FBVUQsR0FDZkUsRUFBRSxnQkFBZ0JDLFFBQ2xCRCxFQUFFLHdCQUF3QkUsS0FBS0osR0FHbkMsUUFBU0ssWUFBV0MsR0FDaEIsR0FBSUMsR0FBTyxHQUFJQyxNQUFLRixFQUNwQixPQUFPQyxHQUFLRSxhQUFlLEtBQU9GLEVBQUtHLGNBQWdCLEdBQUssSUFBTUgsRUFBS0ksaUJBekYzRVQsRUFBRSxXQUNFQSxFQUFFLGNBQWNVLGNBTXBCVixFQUFFLFdBQ0VBLEVBQUVXLFFBQVFDLEtBQUssY0FBZSxXQUMxQixHQUFJQyxHQUFZLEdBQ1pDLEVBQVNDLEtBQUtKLE9BQU9LLFdBQWEsRUFBS0QsS0FBS0osT0FBT0ssV0FBYUQsS0FBS0UsT0FBT0gsS0FDNUVBLEdBQVEsS0FDUmQsRUFBRSx1QkFBdUJrQixTQUFTLFlBQ2xDTCxFQUFZLEtBRVpiLEVBQUUsdUJBQXVCbUIsWUFBWSxXQUd6QyxJQUFJQyxJQUFXTCxLQUFLSixPQUFPVSxZQUFjLEVBQUtOLEtBQUtKLE9BQU9VLFlBQWNOLEtBQUtFLE9BQU9HLFFBQVUsQ0FDOUZBLElBQWtCUCxFQUNkTyxFQUFTLElBQUdBLEVBQVMsR0FDckJBLEVBQVNQLEdBQ1RiLEVBQUUsaUJBQWlCc0IsSUFBSSxhQUFjLEVBQVcsT0FLeEQsSUFBSUMsR0FBTVosT0FBT2EsU0FBU0MsS0FBS0MsTUFBTSxLQUFLLEdBSXRDQyxFQUFVM0IsRUFBRSxZQUFZNEIsT0FBTyxXQUMvQixNQUFPYixNQUFLVSxNQUFRRixJQUNyQkwsU0FBUyxVQUFVVyxRQUl0QixLQUZBN0IsRUFBRSwyQkFBMkI4QixXQUFXLFlBRTNCLENBQ1QsSUFBSUgsRUFBUUksR0FBRyxNQUdYLEtBRkFKLEdBQVVBLEVBQVFFLFNBQVNYLFNBQVMsTUFBTVciLCJmaWxlIjoic2ItYWRtaW4tMi5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIkKGZ1bmN0aW9uICgpIHtcbiAgICAkKCcjc2lkZS1tZW51JykubWV0aXNNZW51KCk7XG59KTtcblxuLy9Mb2FkcyB0aGUgY29ycmVjdCBzaWRlYmFyIG9uIHdpbmRvdyBsb2FkLFxuLy9jb2xsYXBzZXMgdGhlIHNpZGViYXIgb24gd2luZG93IHJlc2l6ZS5cbi8vIFNldHMgdGhlIG1pbi1oZWlnaHQgb2YgI3BhZ2Utd3JhcHBlciB0byB3aW5kb3cgc2l6ZVxuJChmdW5jdGlvbiAoKSB7XG4gICAgJCh3aW5kb3cpLmJpbmQoXCJsb2FkIHJlc2l6ZVwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciB0b3BPZmZzZXQgPSA1MDtcbiAgICAgICAgdmFyIHdpZHRoID0gKHRoaXMud2luZG93LmlubmVyV2lkdGggPiAwKSA/IHRoaXMud2luZG93LmlubmVyV2lkdGggOiB0aGlzLnNjcmVlbi53aWR0aDtcbiAgICAgICAgaWYgKHdpZHRoIDwgNzY4KSB7XG4gICAgICAgICAgICAkKCdkaXYubmF2YmFyLWNvbGxhcHNlJykuYWRkQ2xhc3MoJ2NvbGxhcHNlJyk7XG4gICAgICAgICAgICB0b3BPZmZzZXQgPSAxMDA7IC8vIDItcm93LW1lbnVcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICQoJ2Rpdi5uYXZiYXItY29sbGFwc2UnKS5yZW1vdmVDbGFzcygnY29sbGFwc2UnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBoZWlnaHQgPSAoKHRoaXMud2luZG93LmlubmVySGVpZ2h0ID4gMCkgPyB0aGlzLndpbmRvdy5pbm5lckhlaWdodCA6IHRoaXMuc2NyZWVuLmhlaWdodCkgLSAxO1xuICAgICAgICBoZWlnaHQgPSBoZWlnaHQgLSB0b3BPZmZzZXQ7XG4gICAgICAgIGlmIChoZWlnaHQgPCAxKSBoZWlnaHQgPSAxO1xuICAgICAgICBpZiAoaGVpZ2h0ID4gdG9wT2Zmc2V0KSB7XG4gICAgICAgICAgICAkKFwiI3BhZ2Utd3JhcHBlclwiKS5jc3MoXCJtaW4taGVpZ2h0XCIsIChoZWlnaHQpICsgXCJweFwiKTtcbiAgICAgICAgfVxuICAgIH0pO1xuXG5cbiAgICB2YXIgdXJsID0gd2luZG93LmxvY2F0aW9uLmhyZWYuc3BsaXQoJyMnKVswXTtcbiAgICAvLyB2YXIgZWxlbWVudCA9ICQoJ3VsLm5hdiBhJykuZmlsdGVyKGZ1bmN0aW9uKCkge1xuICAgIC8vICAgICByZXR1cm4gdGhpcy5ocmVmID09IHVybDtcbiAgICAvLyB9KS5hZGRDbGFzcygnYWN0aXZlJykucGFyZW50KCkucGFyZW50KCkuYWRkQ2xhc3MoJ2luJykucGFyZW50KCk7XG4gICAgdmFyIGVsZW1lbnQgPSAkKCd1bC5uYXYgYScpLmZpbHRlcihmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmhyZWYgPT0gdXJsO1xuICAgIH0pLmFkZENsYXNzKCdhY3RpdmUnKS5wYXJlbnQoKTtcblxuICAgICQoXCIubmF2YmFyLWRlZmF1bHQuc2lkZWJhclwiKS5yZW1vdmVBdHRyKFwiaGlkZGVuXCIpO1xuXG4gICAgd2hpbGUgKHRydWUpIHtcbiAgICAgICAgaWYgKGVsZW1lbnQuaXMoJ2xpJykpIHtcbiAgICAgICAgICAgIGVsZW1lbnQgPSBlbGVtZW50LnBhcmVudCgpLmFkZENsYXNzKCdpbicpLnBhcmVudCgpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICB9XG59KTtcblxuZnVuY3Rpb24gcG9zdChwYXRoLCBwYXJhbXMsIG1ldGhvZCkge1xuICAgIG1ldGhvZCA9IG1ldGhvZCB8fCBcInBvc3RcIjsgLy8gU2V0IG1ldGhvZCB0byBwb3N0IGJ5IGRlZmF1bHQgaWYgbm90IHNwZWNpZmllZC5cblxuICAgIC8vIFRoZSByZXN0IG9mIHRoaXMgY29kZSBhc3N1bWVzIHlvdSBhcmUgbm90IHVzaW5nIGEgbGlicmFyeS5cbiAgICAvLyBJdCBjYW4gYmUgbWFkZSBsZXNzIHdvcmR5IGlmIHlvdSB1c2Ugb25lLlxuICAgIHZhciBmb3JtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImZvcm1cIik7XG4gICAgZm9ybS5zZXRBdHRyaWJ1dGUoXCJtZXRob2RcIiwgbWV0aG9kKTtcbiAgICBmb3JtLnNldEF0dHJpYnV0ZShcImFjdGlvblwiLCBwYXRoKTtcblxuICAgIGZvciAodmFyIGtleSBpbiBwYXJhbXMpIHtcbiAgICAgICAgaWYgKHBhcmFtcy5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICAgICAgICB2YXIgaGlkZGVuRmllbGQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG4gICAgICAgICAgICBoaWRkZW5GaWVsZC5zZXRBdHRyaWJ1dGUoXCJ0eXBlXCIsIFwiaGlkZGVuXCIpO1xuICAgICAgICAgICAgaGlkZGVuRmllbGQuc2V0QXR0cmlidXRlKFwibmFtZVwiLCBrZXkpO1xuICAgICAgICAgICAgaGlkZGVuRmllbGQuc2V0QXR0cmlidXRlKFwidmFsdWVcIiwgcGFyYW1zW2tleV0pO1xuXG4gICAgICAgICAgICBmb3JtLmFwcGVuZENoaWxkKGhpZGRlbkZpZWxkKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoZm9ybSk7XG4gICAgZm9ybS5zdWJtaXQoKTtcbn1cblxuZnVuY3Rpb24gZXJyb3JIYW5kbGVyKHhocikge1xuICAgIGNvbnNvbGUubG9nKHhocik7XG5cbiAgICB2YXIganNvblJlc3BvbnNlID0geGhyLnJlc3BvbnNlSlNPTjtcblxuICAgIGNvbnNvbGUubG9nKGpzb25SZXNwb25zZSk7XG5cbiAgICBpZiAoanNvblJlc3BvbnNlICYmIGpzb25SZXNwb25zZS5zdGF0dXMgPT0gZmFsc2UgJiYganNvblJlc3BvbnNlLm1lc3NhZ2UpIHtcbiAgICAgICAgc2hvd0Vycm9yKGpzb25SZXNwb25zZS5tZXNzYWdlKTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIHNob3dFcnJvcihtZXNzYWdlKSB7XG4gICAgJChcIiNlcnJvci1hbGVydFwiKS5hbGVydCgpO1xuICAgICQoXCIjZXJyb3ItYWxlcnQtbWVzc2FnZVwiKS5odG1sKG1lc3NhZ2UpO1xufVxuXG5mdW5jdGlvbiBmb3JtYXREYXRlKGRhdGVTdHJpbmcpIHtcbiAgICB2YXIgZGF0ZSA9IG5ldyBEYXRlKGRhdGVTdHJpbmcpO1xuICAgIHJldHVybiBkYXRlLmdldFVUQ0RhdGUoKSArIFwiL1wiICsgKGRhdGUuZ2V0VVRDTW9udGgoKSArIDEpICsgXCIvXCIgKyBkYXRlLmdldFVUQ0Z1bGxZZWFyKCk7XG59Il19
