var lecturers={},hash=window.location.hash,page=1,numberOfPages=$("#number-of-pages").text(),unitID=$("#unit-id").text();$(document).ready(function(){hash&&"#page"==hash.substring(0,5)&&(page=parseInt(hash.substring(6))),$("#pagination").pagination({items:numberOfPages,itemOnPage:8,currentPage:page,cssStyle:"",prevText:'<span aria-hidden="true">&laquo;</span>',nextText:'<span aria-hidden="true">&raquo;</span>',onInit:function(){getData()},onPageClick:function(e,a){page=e,window.location.hash="#page-"+page,console.log(page),null==lecturers[page]?getData():setDataToTable()}})});var success=function(e){1==e.status?(console.log(e),lecturers[page]=[],e.data.forEach(function(e){lecturers[page].push(e)}),setDataToTable(10*(page-1),e.data.length)):showError(e.message)},getData=function(){var e={page:page,unit_id:unitID};$.ajax({url:"/api/get_lecturers_in_unit",method:"GET",data:e,success:success,error:errorHandler})},setDataToTable=function(){$("#lecturer-list").children().remove(),lecturers[page].forEach(function(e){if(null!=e.lecturer){var a="";e.lecturer.fields.forEach(function(e){a.append("<span class='label label-primary'>"+e.name+"</span>")});var n="";e.lecturer.rank&&(n=e.lecturer.rank);var r="";e.lecturer.fields&&e.lecturer.fields.length>0&&e.lecturer.fields.forEach(function(e){r.append('<span class="label label-default">'+e.name+"</span>")}),$("#lecturer-list").append('<div class="col-lg-3 col-md-4"><div class="panel panel-primary"><div class="panel-heading">'+e.fullName+'</div><div class="panel-body"><p><strong>Mã giảng viên: </strong>'+e.officerNumber+"</p><p><strong>Học hàm/ học vị: </strong>"+n+"</p><p><strong>Các lĩnh vực nghiên cứu: </strong>"+a+'</p></div><div class="panel-footer"><a href="/lecturers/'+e.officerNumber+'">Xem thông tin</a></div></div></div>')}})};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInB1YmxpYy5icm93c2UuanMiXSwibmFtZXMiOlsibGVjdHVyZXJzIiwiaGFzaCIsIndpbmRvdyIsImxvY2F0aW9uIiwicGFnZSIsIm51bWJlck9mUGFnZXMiLCIkIiwidGV4dCIsInVuaXRJRCIsImRvY3VtZW50IiwicmVhZHkiLCJzdWJzdHJpbmciLCJwYXJzZUludCIsInBhZ2luYXRpb24iLCJpdGVtcyIsIml0ZW1PblBhZ2UiLCJjdXJyZW50UGFnZSIsImNzc1N0eWxlIiwicHJldlRleHQiLCJuZXh0VGV4dCIsIm9uSW5pdCIsImdldERhdGEiLCJvblBhZ2VDbGljayIsImV2dCIsImNvbnNvbGUiLCJsb2ciLCJzZXREYXRhVG9UYWJsZSIsInN1Y2Nlc3MiLCJyZXNwb25zZSIsInN0YXR1cyIsImRhdGEiLCJmb3JFYWNoIiwibGVjdHVyZXIiLCJwdXNoIiwibGVuZ3RoIiwic2hvd0Vycm9yIiwibWVzc2FnZSIsInVuaXRfaWQiLCJhamF4IiwidXJsIiwibWV0aG9kIiwiZXJyb3IiLCJlcnJvckhhbmRsZXIiLCJjaGlsZHJlbiIsInJlbW92ZSIsImZpZWxkc0h0bWwiLCJmaWVsZHMiLCJmaWVsZCIsImFwcGVuZCIsIm5hbWUiLCJyYW5rIiwiZmllbGRzSFRNTCIsImZ1bGxOYW1lIiwib2ZmaWNlck51bWJlciJdLCJtYXBwaW5ncyI6IkFBQUEsR0FBSUEsY0FDQUMsS0FBT0MsT0FBT0MsU0FBU0YsS0FDdkJHLEtBQU8sRUFDUEMsY0FBZ0JDLEVBQUUsb0JBQW9CQyxPQUN0Q0MsT0FBU0YsRUFBRSxZQUFZQyxNQUUzQkQsR0FBRUcsVUFBVUMsTUFBTSxXQUVWVCxNQUFnQyxTQUF4QkEsS0FBS1UsVUFBVSxFQUFHLEtBQzFCUCxLQUFPUSxTQUFTWCxLQUFLVSxVQUFVLEtBR25DTCxFQUFFLGVBQWVPLFlBQ2JDLE1BQU9ULGNBQ1BVLFdBQVksRUFDWkMsWUFBYVosS0FDYmEsU0FBVSxHQUNWQyxTQUFVLDBDQUNWQyxTQUFVLDBDQUNWQyxPQUFRLFdBRUpDLFdBRUpDLFlBQWEsU0FBVU4sRUFBYU8sR0FFaENuQixLQUFPWSxFQUNQZCxPQUFPQyxTQUFTRixLQUFPLFNBQVdHLEtBQ2xDb0IsUUFBUUMsSUFBSXJCLE1BQ1csTUFBbkJKLFVBQVVJLE1BQ1ZpQixVQUVBSyxxQkFNaEIsSUFBSUMsU0FBVSxTQUFVQyxHQUNHLEdBQW5CQSxFQUFTQyxRQUVUTCxRQUFRQyxJQUFJRyxHQUVaNUIsVUFBVUksU0FFVndCLEVBQVNFLEtBQUtDLFFBQVEsU0FBVUMsR0FDNUJoQyxVQUFVSSxNQUFNNkIsS0FBS0QsS0FHekJOLGVBQTRCLElBQVp0QixLQUFPLEdBQVN3QixFQUFTRSxLQUFLSSxTQUc5Q0MsVUFBVVAsRUFBU1EsVUFJdkJmLFFBQVUsV0FFVixHQUFJUyxJQUNBMUIsS0FBTUEsS0FDTmlDLFFBQVM3QixPQUdiRixHQUFFZ0MsTUFDRUMsSUFBSyw2QkFDTEMsT0FBUSxNQUNSVixLQUFNQSxFQUNOSCxRQUFTQSxRQUNUYyxNQUFPQyxnQkFJWGhCLGVBQWlCLFdBQ2pCcEIsRUFBRSxrQkFBa0JxQyxXQUFXQyxTQUUvQjVDLFVBQVVJLE1BQU0yQixRQUFRLFNBQVVDLEdBQzlCLEdBQXlCLE1BQXJCQSxFQUFTQSxTQUFrQixDQUMzQixHQUFJYSxHQUFhLEVBRWpCYixHQUFTQSxTQUFTYyxPQUFPZixRQUFRLFNBQVVnQixHQUN2Q0YsRUFBV0csT0FBTyxxQ0FBdUNELEVBQU1FLEtBQU8sWUFHMUUsSUFBSUMsR0FBTyxFQUNQbEIsR0FBU0EsU0FBU2tCLE9BQ2xCQSxFQUFPbEIsRUFBU0EsU0FBU2tCLEtBRzdCLElBQUlDLEdBQWEsRUFDYm5CLEdBQVNBLFNBQVNjLFFBQVVkLEVBQVNBLFNBQVNjLE9BQU9aLE9BQVMsR0FDOURGLEVBQVNBLFNBQVNjLE9BQU9mLFFBQVEsU0FBVWdCLEdBQ3ZDSSxFQUFXSCxPQUFPLHFDQUF1Q0QsRUFBTUUsS0FBTyxhQUk5RTNDLEVBQUUsa0JBQWtCMEMsT0FBTyw4RkFFU2hCLEVBQVNvQixTQUFXLG9FQUVacEIsRUFBU3FCLGNBQWdCLDRDQUN2QkgsRUFBTyxvREFDQ0wsRUFBYSwyREFHdENiLEVBQVNxQixjQUFnQiIsImZpbGUiOiJwdWJsaWMuYnJvd3NlLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBsZWN0dXJlcnMgPSB7fTtcclxudmFyIGhhc2ggPSB3aW5kb3cubG9jYXRpb24uaGFzaDtcclxudmFyIHBhZ2UgPSAxO1xyXG52YXIgbnVtYmVyT2ZQYWdlcyA9ICQoXCIjbnVtYmVyLW9mLXBhZ2VzXCIpLnRleHQoKTtcclxudmFyIHVuaXRJRCA9ICQoXCIjdW5pdC1pZFwiKS50ZXh0KCk7XHJcblxyXG4kKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgaWYgKGhhc2ggJiYgaGFzaC5zdWJzdHJpbmcoMCwgNSkgPT0gJyNwYWdlJykge1xyXG4gICAgICAgIHBhZ2UgPSBwYXJzZUludChoYXNoLnN1YnN0cmluZyg2KSk7XHJcbiAgICB9XHJcblxyXG4gICAgJCgnI3BhZ2luYXRpb24nKS5wYWdpbmF0aW9uKHtcclxuICAgICAgICBpdGVtczogbnVtYmVyT2ZQYWdlcyxcclxuICAgICAgICBpdGVtT25QYWdlOiA4LFxyXG4gICAgICAgIGN1cnJlbnRQYWdlOiBwYWdlLFxyXG4gICAgICAgIGNzc1N0eWxlOiAnJyxcclxuICAgICAgICBwcmV2VGV4dDogJzxzcGFuIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPiZsYXF1bzs8L3NwYW4+JyxcclxuICAgICAgICBuZXh0VGV4dDogJzxzcGFuIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPiZyYXF1bzs8L3NwYW4+JyxcclxuICAgICAgICBvbkluaXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgLy8gZmlyZSBmaXJzdCBwYWdlIGxvYWRpbmdcclxuICAgICAgICAgICAgZ2V0RGF0YSgpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgb25QYWdlQ2xpY2s6IGZ1bmN0aW9uIChjdXJyZW50UGFnZSwgZXZ0KSB7XHJcbiAgICAgICAgICAgIC8vIHNvbWUgY29kZVxyXG4gICAgICAgICAgICBwYWdlID0gY3VycmVudFBhZ2U7XHJcbiAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5oYXNoID0gXCIjcGFnZS1cIiArIHBhZ2U7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKHBhZ2UpO1xyXG4gICAgICAgICAgICBpZiAobGVjdHVyZXJzW3BhZ2VdID09IG51bGwpIHtcclxuICAgICAgICAgICAgICAgIGdldERhdGEoKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHNldERhdGFUb1RhYmxlKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9KTtcclxufSk7XHJcblxyXG52YXIgc3VjY2VzcyA9IGZ1bmN0aW9uIChyZXNwb25zZSkge1xyXG4gICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PSB0cnVlKSB7XHJcblxyXG4gICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTtcclxuXHJcbiAgICAgICAgbGVjdHVyZXJzW3BhZ2VdID0gW107XHJcblxyXG4gICAgICAgIHJlc3BvbnNlLmRhdGEuZm9yRWFjaChmdW5jdGlvbiAobGVjdHVyZXIpIHtcclxuICAgICAgICAgICAgbGVjdHVyZXJzW3BhZ2VdLnB1c2gobGVjdHVyZXIpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICBzZXREYXRhVG9UYWJsZSgocGFnZSAtIDEpICogMTAsIHJlc3BvbnNlLmRhdGEubGVuZ3RoKTtcclxuXHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIHNob3dFcnJvcihyZXNwb25zZS5tZXNzYWdlKVxyXG4gICAgfVxyXG59O1xyXG5cclxudmFyIGdldERhdGEgPSBmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgdmFyIGRhdGEgPSB7XHJcbiAgICAgICAgcGFnZTogcGFnZSxcclxuICAgICAgICB1bml0X2lkOiB1bml0SURcclxuICAgIH07XHJcblxyXG4gICAgJC5hamF4KHtcclxuICAgICAgICB1cmw6IFwiL2FwaS9nZXRfbGVjdHVyZXJzX2luX3VuaXRcIixcclxuICAgICAgICBtZXRob2Q6IFwiR0VUXCIsXHJcbiAgICAgICAgZGF0YTogZGF0YSxcclxuICAgICAgICBzdWNjZXNzOiBzdWNjZXNzLFxyXG4gICAgICAgIGVycm9yOiBlcnJvckhhbmRsZXJcclxuICAgIH0pO1xyXG59O1xyXG5cclxudmFyIHNldERhdGFUb1RhYmxlID0gZnVuY3Rpb24gKCkge1xyXG4gICAgJCgnI2xlY3R1cmVyLWxpc3QnKS5jaGlsZHJlbigpLnJlbW92ZSgpO1xyXG5cclxuICAgIGxlY3R1cmVyc1twYWdlXS5mb3JFYWNoKGZ1bmN0aW9uIChsZWN0dXJlcikge1xyXG4gICAgICAgIGlmIChsZWN0dXJlci5sZWN0dXJlciAhPSBudWxsKSB7XHJcbiAgICAgICAgICAgIHZhciBmaWVsZHNIdG1sID0gXCJcIjtcclxuXHJcbiAgICAgICAgICAgIGxlY3R1cmVyLmxlY3R1cmVyLmZpZWxkcy5mb3JFYWNoKGZ1bmN0aW9uIChmaWVsZCkge1xyXG4gICAgICAgICAgICAgICAgZmllbGRzSHRtbC5hcHBlbmQoXCI8c3BhbiBjbGFzcz0nbGFiZWwgbGFiZWwtcHJpbWFyeSc+XCIgKyBmaWVsZC5uYW1lICsgXCI8L3NwYW4+XCIpO1xyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIHZhciByYW5rID0gXCJcIjtcclxuICAgICAgICAgICAgaWYgKGxlY3R1cmVyLmxlY3R1cmVyLnJhbmspIHtcclxuICAgICAgICAgICAgICAgIHJhbmsgPSBsZWN0dXJlci5sZWN0dXJlci5yYW5rO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICB2YXIgZmllbGRzSFRNTCA9IFwiXCI7XHJcbiAgICAgICAgICAgIGlmIChsZWN0dXJlci5sZWN0dXJlci5maWVsZHMgJiYgbGVjdHVyZXIubGVjdHVyZXIuZmllbGRzLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgICAgIGxlY3R1cmVyLmxlY3R1cmVyLmZpZWxkcy5mb3JFYWNoKGZ1bmN0aW9uIChmaWVsZCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGZpZWxkc0hUTUwuYXBwZW5kKCc8c3BhbiBjbGFzcz1cImxhYmVsIGxhYmVsLWRlZmF1bHRcIj4nICsgZmllbGQubmFtZSArICc8L3NwYW4+JylcclxuICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICQoJyNsZWN0dXJlci1saXN0JykuYXBwZW5kKCc8ZGl2IGNsYXNzPVwiY29sLWxnLTMgY29sLW1kLTRcIj4nICtcclxuICAgICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwicGFuZWwgcGFuZWwtcHJpbWFyeVwiPicgK1xyXG4gICAgICAgICAgICAgICAgJzxkaXYgY2xhc3M9XCJwYW5lbC1oZWFkaW5nXCI+JyArIGxlY3R1cmVyLmZ1bGxOYW1lICsgJzwvZGl2PicgK1xyXG4gICAgICAgICAgICAgICAgJzxkaXYgY2xhc3M9XCJwYW5lbC1ib2R5XCI+JyArXHJcbiAgICAgICAgICAgICAgICAnPHA+PHN0cm9uZz5Nw6MgZ2nhuqNuZyB2acOqbjogPC9zdHJvbmc+JyArIGxlY3R1cmVyLm9mZmljZXJOdW1iZXIgKyAnPC9wPicgK1xyXG4gICAgICAgICAgICAgICAgJzxwPjxzdHJvbmc+SOG7jWMgaMOgbS8gaOG7jWMgduG7izogPC9zdHJvbmc+JyArIHJhbmsgKyAnPC9wPicgK1xyXG4gICAgICAgICAgICAgICAgJzxwPjxzdHJvbmc+Q8OhYyBsxKluaCB24buxYyBuZ2hpw6puIGPhu6l1OiA8L3N0cm9uZz4nICsgZmllbGRzSHRtbCArICc8L3A+JyArXHJcbiAgICAgICAgICAgICAgICAnPC9kaXY+JyArXHJcbiAgICAgICAgICAgICAgICAnPGRpdiBjbGFzcz1cInBhbmVsLWZvb3RlclwiPicgK1xyXG4gICAgICAgICAgICAgICAgJzxhIGhyZWY9XCIvbGVjdHVyZXJzLycgKyBsZWN0dXJlci5vZmZpY2VyTnVtYmVyICsgJ1wiPlhlbSB0aMO0bmcgdGluPC9hPicgK1xyXG4gICAgICAgICAgICAgICAgJzwvZGl2PicgK1xyXG4gICAgICAgICAgICAgICAgJzwvZGl2PicgK1xyXG4gICAgICAgICAgICAgICAgJzwvZGl2PidcclxuICAgICAgICAgICAgKVxyXG5cclxuICAgICAgICB9XHJcbiAgICB9KTtcclxufTtcclxuIl19
