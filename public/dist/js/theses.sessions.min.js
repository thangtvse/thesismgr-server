var sessions={},hash=window.location.hash,page=1,numberOfPages=$("#number-of-pages").text();$(document).ready(function(){hash&&"#page"==hash.substring(0,5)&&(page=parseInt(hash.substring(6))),$("#pagination").pagination({items:numberOfPages,itemOnPage:8,currentPage:page,cssStyle:"",prevText:'<span aria-hidden="true">&laquo;</span>',nextText:'<span aria-hidden="true">&raquo;</span>',onInit:function(){getData()},onPageClick:function(a,e){page=a,window.location.hash="#page-"+page,console.log(page),null==sessions[page]?getData():setDataToTable()}}),$(".unit-search-item.link").click(function(a){var e=$(this);$("#category-search-drop-menu-button").html(e.attr("data-name")+' <span class="caret"></span>'),null!=e.attr("data-id")?$(".unit-id").val(e.attr("data-id")):$(".unit_id").val(null),a.preventDefault()}),$(".form-control.category-search.input").keyup(function(){var a=$(".form-control.category-search.input"),e=a.val();console.log("keyup with text: "+e),$(".unit-search-item").each(function(a){var t=$(this);t.text().toLowerCase().indexOf(e.toLowerCase())>=0?t.show():t.hide()})})});var success=function(a){1==a.status?(console.log(a),sessions[page]=[],a.data.forEach(function(a){sessions[page].push(a)}),setDataToTable(10*(page-1),a.data.length)):showError(a.message)},getData=function(){var a={page:page};"moderator"==$("#current-role").text()&&(a.faculty_id=$("#current-facultyID").text()),$.ajax({url:"/admin/theses/api/sessions",method:"GET",data:a,success:success,error:errorHandler})},setDataToTable=function(){$(".table.table-body").children().remove(),sessions[page].forEach(function(a){$("#table-sessions").append("<tr><td>"+a.name+"</td><td>"+formatDate(a.from)+"</td><td>"+formatDate(a.to)+"</td><td>"+a.faculty.name+'</td><td></td><td><a href="#" onclick="notify(event, \''+a.id+"')\">Send Notifications</a></td></tr>")})},notify=function(a,e){a.preventDefault(),bootbox.confirm({message:"Send email for all thesis-registrable students about this session?",buttons:{confirm:{label:"Yes",className:"btn-success"},cancel:{label:"No",className:"btn-danger"}},callback:function(a){1==a&&$.ajax({url:"/admin/theses/api/sessions/notify",method:"POST",data:{session_id:e},success:function(a){1==a.status?bootbox.alert({message:"Send notifications successfully!",size:"small"}):showError(a.message)},error:errorHandler})}})};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
