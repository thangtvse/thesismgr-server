var sessions={},hash=window.location.hash,page=1,numberOfPages=$("#number-of-pages").text();$(document).ready(function(){hash&&"#page"==hash.substring(0,5)&&(page=parseInt(hash.substring(6))),$("#pagination").pagination({items:numberOfPages,itemOnPage:8,currentPage:page,cssStyle:"",prevText:'<span aria-hidden="true">&laquo;</span>',nextText:'<span aria-hidden="true">&raquo;</span>',onInit:function(){getData()},onPageClick:function(a,e){page=a,window.location.hash="#page-"+page,console.log(page),null==sessions[page]?getData():setDataToTable()}}),$(".unit-search-item.link").click(function(a){var e=$(this);$("#category-search-drop-menu-button").html(e.attr("data-name")+' <span class="caret"></span>'),null!=e.attr("data-id")?$(".unit-id").val(e.attr("data-id")):$(".unit_id").val(null),a.preventDefault()}),$(".form-control.category-search.input").keyup(function(){var a=$(".form-control.category-search.input"),e=a.val();console.log("keyup with text: "+e),$(".unit-search-item").each(function(a){var t=$(this);t.text().toLowerCase().indexOf(e.toLowerCase())>=0?t.show():t.hide()})})});var success=function(a){1==a.status?(console.log(a),sessions[page]=[],a.data.forEach(function(a){sessions[page].push(a)}),setDataToTable(10*(page-1),a.data.length)):showError(a.message)},getData=function(){var a={page:page};"moderator"==$("#current-role").text()&&(a.faculty_id=$("#current-facultyID").text()),$.ajax({url:"/admin/theses/api/sessions",method:"GET",data:a,success:success,error:errorHandler})},setDataToTable=function(){$(".table.table-body").children().remove(),sessions[page].forEach(function(a){$("#table-sessions").append("<tr><td>"+a.name+"</td><td>"+formatDate(a.from)+"</td><td>"+formatDate(a.to)+"</td><td>"+a.faculty.name+'</td><td></td><td><a href="#" onclick="notify(event, \''+a.id+"')\">Send Notifications</a></td></tr>")})},notify=function(a,e){a.preventDefault(),bootbox.confirm({message:"Send email for all thesis-registrable students about this session?",buttons:{confirm:{label:"Yes",className:"btn-success"},cancel:{label:"No",className:"btn-danger"}},callback:function(a){1==a&&$.ajax({url:"/admin/theses/api/sessions/notify",method:"POST",data:{session_id:e},success:function(a){1==a.status?console.log(a):showError(a.message)},error:errorHandler})}})};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRoZXNlcy5zZXNzaW9ucy5qcyJdLCJuYW1lcyI6WyJzZXNzaW9ucyIsImhhc2giLCJ3aW5kb3ciLCJsb2NhdGlvbiIsInBhZ2UiLCJudW1iZXJPZlBhZ2VzIiwiJCIsInRleHQiLCJkb2N1bWVudCIsInJlYWR5Iiwic3Vic3RyaW5nIiwicGFyc2VJbnQiLCJwYWdpbmF0aW9uIiwiaXRlbXMiLCJpdGVtT25QYWdlIiwiY3VycmVudFBhZ2UiLCJjc3NTdHlsZSIsInByZXZUZXh0IiwibmV4dFRleHQiLCJvbkluaXQiLCJnZXREYXRhIiwib25QYWdlQ2xpY2siLCJldnQiLCJjb25zb2xlIiwibG9nIiwic2V0RGF0YVRvVGFibGUiLCJjbGljayIsImUiLCJhIiwidGhpcyIsImh0bWwiLCJhdHRyIiwidmFsIiwicHJldmVudERlZmF1bHQiLCJrZXl1cCIsImlucHV0Iiwic2VhcmNoVGV4dCIsImVhY2giLCJpbmRleCIsIml0ZW0iLCJ0b0xvd2VyQ2FzZSIsImluZGV4T2YiLCJzaG93IiwiaGlkZSIsInN1Y2Nlc3MiLCJyZXNwb25zZSIsInN0YXR1cyIsImRhdGEiLCJmb3JFYWNoIiwic2Vzc2lvbiIsInB1c2giLCJsZW5ndGgiLCJzaG93RXJyb3IiLCJtZXNzYWdlIiwiZmFjdWx0eV9pZCIsImFqYXgiLCJ1cmwiLCJtZXRob2QiLCJlcnJvciIsImVycm9ySGFuZGxlciIsImNoaWxkcmVuIiwicmVtb3ZlIiwiYXBwZW5kIiwibmFtZSIsImZvcm1hdERhdGUiLCJmcm9tIiwidG8iLCJmYWN1bHR5IiwiaWQiLCJub3RpZnkiLCJzZXNzaW9uSUQiLCJib290Ym94IiwiY29uZmlybSIsImJ1dHRvbnMiLCJsYWJlbCIsImNsYXNzTmFtZSIsImNhbmNlbCIsImNhbGxiYWNrIiwicmVzdWx0Iiwic2Vzc2lvbl9pZCJdLCJtYXBwaW5ncyI6IkFBSUEsR0FBSUEsYUFDQUMsS0FBT0MsT0FBT0MsU0FBU0YsS0FDdkJHLEtBQU8sRUFDUEMsY0FBZ0JDLEVBQUUsb0JBQW9CQyxNQUUxQ0QsR0FBRUUsVUFBVUMsTUFBTSxXQUVWUixNQUFnQyxTQUF4QkEsS0FBS1MsVUFBVSxFQUFHLEtBQzFCTixLQUFPTyxTQUFTVixLQUFLUyxVQUFVLEtBR25DSixFQUFFLGVBQWVNLFlBQ2JDLE1BQU9SLGNBQ1BTLFdBQVksRUFDWkMsWUFBYVgsS0FDYlksU0FBVSxHQUNWQyxTQUFVLDBDQUNWQyxTQUFVLDBDQUNWQyxPQUFRLFdBRUpDLFdBRUpDLFlBQWEsU0FBVU4sRUFBYU8sR0FFaENsQixLQUFPVyxFQUNQYixPQUFPQyxTQUFTRixLQUFPLFNBQVdHLEtBQ2xDbUIsUUFBUUMsSUFBSXBCLE1BQ1UsTUFBbEJKLFNBQVNJLE1BQ1RnQixVQUVBSyxvQkFPWm5CLEVBQUUsMEJBQTBCb0IsTUFBTSxTQUFVQyxHQUN4QyxHQUFJQyxHQUFJdEIsRUFBRXVCLEtBR1Z2QixHQUFFLHFDQUFxQ3dCLEtBQUtGLEVBQUVHLEtBQUssYUFBZSxnQ0FDekMsTUFBckJILEVBQUVHLEtBQUssV0FHUHpCLEVBQUUsWUFBWTBCLElBQUlKLEVBQUVHLEtBQUssWUFHekJ6QixFQUFFLFlBQVkwQixJQUFJLE1BSXRCTCxFQUFFTSxtQkFHTjNCLEVBQUUsdUNBQXVDNEIsTUFBTSxXQUMzQyxHQUFJQyxHQUFRN0IsRUFBRSx1Q0FDVjhCLEVBQWFELEVBQU1ILEtBRXZCVCxTQUFRQyxJQUFJLG9CQUFzQlksR0FFbEM5QixFQUFFLHFCQUFxQitCLEtBQUssU0FBVUMsR0FFbEMsR0FBSUMsR0FBT2pDLEVBQUV1QixLQUVUVSxHQUFLaEMsT0FBT2lDLGNBQWNDLFFBQVFMLEVBQVdJLGdCQUFrQixFQUMvREQsRUFBS0csT0FFTEgsRUFBS0ksWUFNckIsSUFBSUMsU0FBVSxTQUFVQyxHQUNHLEdBQW5CQSxFQUFTQyxRQUVUdkIsUUFBUUMsSUFBSXFCLEdBRVo3QyxTQUFTSSxTQUVUeUMsRUFBU0UsS0FBS0MsUUFBUSxTQUFVQyxHQUM1QmpELFNBQVNJLE1BQU04QyxLQUFLRCxLQUd4QnhCLGVBQTRCLElBQVpyQixLQUFPLEdBQVN5QyxFQUFTRSxLQUFLSSxTQUc5Q0MsVUFBVVAsRUFBU1EsVUFJdkJqQyxRQUFVLFdBRVYsR0FBSTJCLElBQ0EzQyxLQUFNQSxLQUd1QixjQUE3QkUsRUFBRSxpQkFBaUJDLFNBQ25Cd0MsRUFBS08sV0FBYWhELEVBQUUsc0JBQXNCQyxRQUc5Q0QsRUFBRWlELE1BQ0VDLElBQUssNkJBQ0xDLE9BQVEsTUFDUlYsS0FBTUEsRUFDTkgsUUFBU0EsUUFDVGMsTUFBT0MsZ0JBSVhsQyxlQUFpQixXQUNqQm5CLEVBQUUscUJBQXFCc0QsV0FBV0MsU0FFbEM3RCxTQUFTSSxNQUFNNEMsUUFBUSxTQUFVQyxHQUU3QjNDLEVBQUUsbUJBQW1Cd0QsT0FBTyxXQUNmYixFQUFRYyxLQUFPLFlBQ2ZDLFdBQVdmLEVBQVFnQixNQUFRLFlBQzNCRCxXQUFXZixFQUFRaUIsSUFBTSxZQUN6QmpCLEVBQVFrQixRQUFRSixLQUFPLDBEQUVjZCxFQUFRbUIsR0FBSyw0Q0FNbkVDLE9BQVMsU0FBVTFDLEVBQUcyQyxHQUN0QjNDLEVBQUVNLGlCQUVGc0MsUUFBUUMsU0FDSm5CLFFBQVMscUVBQ1RvQixTQUNJRCxTQUNJRSxNQUFPLE1BQ1BDLFVBQVcsZUFFZkMsUUFDSUYsTUFBTyxLQUNQQyxVQUFXLGVBR25CRSxTQUFVLFNBQVVDLEdBQ0YsR0FBVkEsR0FFQXhFLEVBQUVpRCxNQUNFQyxJQUFLLG9DQUNMQyxPQUFRLE9BQ1JWLE1BQ0lnQyxXQUFZVCxHQUVoQjFCLFFBQVMsU0FBVUMsR0FDUSxHQUFuQkEsRUFBU0MsT0FFVHZCLFFBQVFDLElBQUlxQixHQUdaTyxVQUFVUCxFQUFTUSxVQUczQkssTUFBT0MiLCJmaWxlIjoidGhlc2VzLnNlc3Npb25zLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ3JlYXRlZCBieSB0cmFudmlldHRoYW5nIG9uIDEyLzQvMTYuXG4gKi9cblxudmFyIHNlc3Npb25zID0ge307XG52YXIgaGFzaCA9IHdpbmRvdy5sb2NhdGlvbi5oYXNoO1xudmFyIHBhZ2UgPSAxO1xudmFyIG51bWJlck9mUGFnZXMgPSAkKFwiI251bWJlci1vZi1wYWdlc1wiKS50ZXh0KCk7XG5cbiQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uICgpIHtcblxuICAgIGlmIChoYXNoICYmIGhhc2guc3Vic3RyaW5nKDAsIDUpID09ICcjcGFnZScpIHtcbiAgICAgICAgcGFnZSA9IHBhcnNlSW50KGhhc2guc3Vic3RyaW5nKDYpKTtcbiAgICB9XG5cbiAgICAkKCcjcGFnaW5hdGlvbicpLnBhZ2luYXRpb24oe1xuICAgICAgICBpdGVtczogbnVtYmVyT2ZQYWdlcyxcbiAgICAgICAgaXRlbU9uUGFnZTogOCxcbiAgICAgICAgY3VycmVudFBhZ2U6IHBhZ2UsXG4gICAgICAgIGNzc1N0eWxlOiAnJyxcbiAgICAgICAgcHJldlRleHQ6ICc8c3BhbiBhcmlhLWhpZGRlbj1cInRydWVcIj4mbGFxdW87PC9zcGFuPicsXG4gICAgICAgIG5leHRUZXh0OiAnPHNwYW4gYXJpYS1oaWRkZW49XCJ0cnVlXCI+JnJhcXVvOzwvc3Bhbj4nLFxuICAgICAgICBvbkluaXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIC8vIGZpcmUgZmlyc3QgcGFnZSBsb2FkaW5nXG4gICAgICAgICAgICBnZXREYXRhKCk7XG4gICAgICAgIH0sXG4gICAgICAgIG9uUGFnZUNsaWNrOiBmdW5jdGlvbiAoY3VycmVudFBhZ2UsIGV2dCkge1xuICAgICAgICAgICAgLy8gc29tZSBjb2RlXG4gICAgICAgICAgICBwYWdlID0gY3VycmVudFBhZ2U7XG4gICAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaGFzaCA9IFwiI3BhZ2UtXCIgKyBwYWdlO1xuICAgICAgICAgICAgY29uc29sZS5sb2cocGFnZSk7XG4gICAgICAgICAgICBpZiAoc2Vzc2lvbnNbcGFnZV0gPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIGdldERhdGEoKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgc2V0RGF0YVRvVGFibGUoKTtcbiAgICAgICAgICAgIH1cblxuXG4gICAgICAgIH1cbiAgICB9KTtcblxuICAgICQoXCIudW5pdC1zZWFyY2gtaXRlbS5saW5rXCIpLmNsaWNrKGZ1bmN0aW9uIChlKSB7XG4gICAgICAgIHZhciBhID0gJCh0aGlzKTtcblxuICAgICAgICAvLyBzZXQgdGV4dCBmb3IgZHJvcC1kb3duIG1lbnVcbiAgICAgICAgJChcIiNjYXRlZ29yeS1zZWFyY2gtZHJvcC1tZW51LWJ1dHRvblwiKS5odG1sKGEuYXR0cihcImRhdGEtbmFtZVwiKSArIFwiIDxzcGFuIGNsYXNzPVxcXCJjYXJldFxcXCI+PC9zcGFuPlwiKTtcbiAgICAgICAgaWYgKGEuYXR0cihcImRhdGEtaWRcIikgIT0gbnVsbCkge1xuICAgICAgICAgICAgLy8gc2V0IHZhbHVlIGZvciBmb3JtXG5cbiAgICAgICAgICAgICQoXCIudW5pdC1pZFwiKS52YWwoYS5hdHRyKFwiZGF0YS1pZFwiKSk7XG5cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICQoXCIudW5pdF9pZFwiKS52YWwobnVsbCk7XG4gICAgICAgIH1cblxuXG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICB9KTtcblxuICAgICQoXCIuZm9ybS1jb250cm9sLmNhdGVnb3J5LXNlYXJjaC5pbnB1dFwiKS5rZXl1cChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBpbnB1dCA9ICQoXCIuZm9ybS1jb250cm9sLmNhdGVnb3J5LXNlYXJjaC5pbnB1dFwiKTtcbiAgICAgICAgdmFyIHNlYXJjaFRleHQgPSBpbnB1dC52YWwoKTtcblxuICAgICAgICBjb25zb2xlLmxvZyhcImtleXVwIHdpdGggdGV4dDogXCIgKyBzZWFyY2hUZXh0KTtcblxuICAgICAgICAkKFwiLnVuaXQtc2VhcmNoLWl0ZW1cIikuZWFjaChmdW5jdGlvbiAoaW5kZXgpIHtcblxuICAgICAgICAgICAgdmFyIGl0ZW0gPSAkKHRoaXMpO1xuXG4gICAgICAgICAgICBpZiAoaXRlbS50ZXh0KCkudG9Mb3dlckNhc2UoKS5pbmRleE9mKHNlYXJjaFRleHQudG9Mb3dlckNhc2UoKSkgPj0gMCkge1xuICAgICAgICAgICAgICAgIGl0ZW0uc2hvdygpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBpdGVtLmhpZGUoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICB9KTtcbn0pO1xuXG52YXIgc3VjY2VzcyA9IGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT0gdHJ1ZSkge1xuXG4gICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTtcblxuICAgICAgICBzZXNzaW9uc1twYWdlXSA9IFtdO1xuXG4gICAgICAgIHJlc3BvbnNlLmRhdGEuZm9yRWFjaChmdW5jdGlvbiAoc2Vzc2lvbikge1xuICAgICAgICAgICAgc2Vzc2lvbnNbcGFnZV0ucHVzaChzZXNzaW9uKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgc2V0RGF0YVRvVGFibGUoKHBhZ2UgLSAxKSAqIDEwLCByZXNwb25zZS5kYXRhLmxlbmd0aCk7XG5cbiAgICB9IGVsc2Uge1xuICAgICAgICBzaG93RXJyb3IocmVzcG9uc2UubWVzc2FnZSlcbiAgICB9XG59O1xuXG52YXIgZ2V0RGF0YSA9IGZ1bmN0aW9uICgpIHtcblxuICAgIHZhciBkYXRhID0ge1xuICAgICAgICBwYWdlOiBwYWdlXG4gICAgfTtcblxuICAgIGlmICgkKFwiI2N1cnJlbnQtcm9sZVwiKS50ZXh0KCkgPT0gXCJtb2RlcmF0b3JcIikge1xuICAgICAgICBkYXRhLmZhY3VsdHlfaWQgPSAkKFwiI2N1cnJlbnQtZmFjdWx0eUlEXCIpLnRleHQoKTtcbiAgICB9XG5cbiAgICAkLmFqYXgoe1xuICAgICAgICB1cmw6IFwiL2FkbWluL3RoZXNlcy9hcGkvc2Vzc2lvbnNcIixcbiAgICAgICAgbWV0aG9kOiBcIkdFVFwiLFxuICAgICAgICBkYXRhOiBkYXRhLFxuICAgICAgICBzdWNjZXNzOiBzdWNjZXNzLFxuICAgICAgICBlcnJvcjogZXJyb3JIYW5kbGVyXG4gICAgfSk7XG59O1xuXG52YXIgc2V0RGF0YVRvVGFibGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgJCgnLnRhYmxlLnRhYmxlLWJvZHknKS5jaGlsZHJlbigpLnJlbW92ZSgpO1xuXG4gICAgc2Vzc2lvbnNbcGFnZV0uZm9yRWFjaChmdW5jdGlvbiAoc2Vzc2lvbikge1xuXG4gICAgICAgICQoJyN0YWJsZS1zZXNzaW9ucycpLmFwcGVuZCgnPHRyPicgK1xuICAgICAgICAgICAgJzx0ZD4nICsgc2Vzc2lvbi5uYW1lICsgJzwvdGQ+JyArXG4gICAgICAgICAgICAnPHRkPicgKyBmb3JtYXREYXRlKHNlc3Npb24uZnJvbSkgKyAnPC90ZD4nICtcbiAgICAgICAgICAgICc8dGQ+JyArIGZvcm1hdERhdGUoc2Vzc2lvbi50bykgKyAnPC90ZD4nICtcbiAgICAgICAgICAgICc8dGQ+JyArIHNlc3Npb24uZmFjdWx0eS5uYW1lICsgJzwvdGQ+JyArXG4gICAgICAgICAgICAnPHRkPicgKyAnPC90ZD4nICtcbiAgICAgICAgICAgICc8dGQ+PGEgaHJlZj1cIiNcIiBvbmNsaWNrPVwibm90aWZ5KGV2ZW50LCBcXCcnICsgc2Vzc2lvbi5pZCArICdcXCcpXCI+U2VuZCBOb3RpZmljYXRpb25zPC9hPjwvdGQ+JyArXG4gICAgICAgICAgICAnPC90cj4nXG4gICAgICAgIClcbiAgICB9KTtcbn07XG5cbnZhciBub3RpZnkgPSBmdW5jdGlvbiAoZSwgc2Vzc2lvbklEKSB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgYm9vdGJveC5jb25maXJtKHtcbiAgICAgICAgbWVzc2FnZTogXCJTZW5kIGVtYWlsIGZvciBhbGwgdGhlc2lzLXJlZ2lzdHJhYmxlIHN0dWRlbnRzIGFib3V0IHRoaXMgc2Vzc2lvbj9cIixcbiAgICAgICAgYnV0dG9uczoge1xuICAgICAgICAgICAgY29uZmlybToge1xuICAgICAgICAgICAgICAgIGxhYmVsOiAnWWVzJyxcbiAgICAgICAgICAgICAgICBjbGFzc05hbWU6ICdidG4tc3VjY2VzcydcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjYW5jZWw6IHtcbiAgICAgICAgICAgICAgICBsYWJlbDogJ05vJyxcbiAgICAgICAgICAgICAgICBjbGFzc05hbWU6ICdidG4tZGFuZ2VyJ1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgICAgICAgaWYgKHJlc3VsdCA9PSB0cnVlKSB7XG5cbiAgICAgICAgICAgICAgICAkLmFqYXgoe1xuICAgICAgICAgICAgICAgICAgICB1cmw6IFwiL2FkbWluL3RoZXNlcy9hcGkvc2Vzc2lvbnMvbm90aWZ5XCIsXG4gICAgICAgICAgICAgICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlc3Npb25faWQ6IHNlc3Npb25JRFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT0gdHJ1ZSkge1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNob3dFcnJvcihyZXNwb25zZS5tZXNzYWdlKVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBlcnJvcjogZXJyb3JIYW5kbGVyXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9KTtcbn07XG4iXX0=
